<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "https://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
    <interface name="org.desktopspec.ApplicationManager1.Application">
        <annotation
                name="org.freedesktop.DBus.Description"
                value="This interface is designed to provide a dbus interface of desktop file. Missing fields will be added later."
        />

        <property name="Actions" type="as" access="read">
           <annotation
                name="org.freedesktop.DBus.Description"
                value="Names of all action identifiers of this application.
                       Check https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#extra-actions
                       for futher information."
            />
        </property>

        <property name="AutoStart" type="b" access="readwrite"/>
        <property name="LastLaunchedTime" type="t" access="read"/>

        <property name="Instances" type="ao" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="All instances of this application."
            />
        </property>

        <property name="ID" type="s" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="The desktop file id of this application.
                       Check https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#desktop-file-id
                       for futher infomation."
            />
        </property>

        <property name="Icons" type="a{sa{ua{sh}}}" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="The type of this property is
                       map[action(string)]map[size(uint)]map[format(string)]fd.

                       Format can be `png`, `svg`, `xpm`, `dci` or `icon`
                       refering to the png/svg/xpm/dci format of icon files,
                       as well as the `.icon` file contain the extra icon-data.

                       NOTE:
                       1. `action` is an action identifier
                          which is the id of
                          additional applications actions key.
                          When `action` is emtpy,
                          this method return icon of the main desktop entry.
                          Check https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s11.html#extra-actions-identifier
                          for futher infomation.
                       2. `.icon` is a text file with some metadata.
                          Check https://specifications.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html#file_formats
                          for futher infomation.
                       3. Check https://github.com/linuxdeepin/deepin-specifications
                          for futher infomation of dci icon format."
            />
            <annotation name="org.qtproject.QtDBus.QtTypeName" value="IconMap"/>
        </property>

        <property name="ActionName" type="a{ss}" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="The type of ActionName is a Map, where the key represents the locale and the value is the corresponding content."
            />
            <annotation name="org.qtproject.QtDBus.QtTypeName" value="PropMap"/>
        </property>

        <property name="IconName" type="a{ss}" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="The type of IconName is a Map, where the key represents the action and the value is the corresponding content."
            />
            <annotation name="org.qtproject.QtDBus.QtTypeName" value="PropMap"/>
        </property> 

        <property name="DisplayName" type="a{ss}" access="read">
            <annotation
                name="org.freedesktop.DBus.Description"
                value="The meaning of this property's type is same as which in ActionName."
            />
            <annotation name="org.qtproject.QtDBus.QtTypeName" value="PropMap"/>
        </property>

        <method name="Launch">
            <arg type="s" name="action" direction="in" />
            <arg type="as" name="fields" direction="in" />
            <arg type="o" name="job" direction="out" />

            <arg type="a{sv}" name="options" direction="in"/>
            <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
            <annotation
                name="org.freedesktop.DBus.Description"
                value="Given an action identifier,
                       and some fields (file path or URI),
                       this method will launch this application,
                       and the object path of the job launching application.
                       Result of that job is a object path
                       of the new application instance.
                       If that job failed, the result is a bool `false`.

                       Extra options can be passed in `options` argument:
                       1. `uid` (type u):
                          The user id as who is that application will be run.
                          This option might request a polikit authentication."
            />
        </method>
    </interface>
</node>
