/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c kwaylandmanager -p kwaylandmanager org.deepin.dde.KWayland1.WindowManager.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef KWAYLANDMANAGER_H
#define KWAYLANDMANAGER_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

#include <DBusExtendedAbstractInterface>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface org.deepin.dde.KWayland1.WindowManager
 */
class __kwaylandmanagerPrivate;
class __KwaylandManager : public DBusExtendedAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticInterfaceName()
    { return "org.deepin.dde.KWayland1.WindowManager"; }

public:
    explicit __KwaylandManager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~__KwaylandManager();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<uint> ActiveWindow()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("ActiveWindow"), argumentList);
    }



    inline QDBusPendingReply<bool> IsShowingDesktop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("IsShowingDesktop"), argumentList);
    }



    inline QDBusPendingReply<QVariantList> Windows()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Windows"), argumentList);
    }




Q_SIGNALS: // SIGNALS
    void ActiveWindowChanged();
    void WindowCreated(const QString &ObjPath);
    void WindowRemove(const QString &ObjPath);
    // begin property changed signals

public Q_SLOTS:
    void CallQueued(const QString &callName, const QList<QVariant> &args);

private Q_SLOTS:
    void onPendingCallFinished(QDBusPendingCallWatcher *w);

private:
    __kwaylandmanagerPrivate *d_ptr;
};

namespace org {
  namespace deepin {
    namespace dde {
      namespace kwayland1 {
        typedef ::__KwaylandManager WindowManager;
      }
    }
  }
}
#endif
