/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c WMSwitcher -p generated/org_deepin_dde_wmswitcher1 ../xml/org.deepin.dde.WMSwitcher1.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ORG_DEEPIN_WMSWITCHER1_H
#define ORG_DEEPIN_WMSWITCHER1_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

#include <DBusExtendedAbstractInterface>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface org.deepin.dde.WMSwitcher1
 */
class __WMSwitcherPrivate;
class __WMSwitcher : public DBusExtendedAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticInterfaceName()
    { return "org.deepin.dde.WMSwitcher1"; }

public:
    explicit __WMSwitcher(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~__WMSwitcher();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> AllowSwitch()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("AllowSwitch"), argumentList);
    }



    inline QDBusPendingReply<QString> CurrentWM()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("CurrentWM"), argumentList);
    }



    inline QDBusPendingReply<> RequestSwitchWM()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("RequestSwitchWM"), argumentList);
    }

    inline void RequestSwitchWMQueued()
    {
        QList<QVariant> argumentList;

        CallQueued(QStringLiteral("RequestSwitchWM"), argumentList);
    }


    inline QDBusPendingReply<> RestartWM()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("RestartWM"), argumentList);
    }

    inline void RestartWMQueued()
    {
        QList<QVariant> argumentList;

        CallQueued(QStringLiteral("RestartWM"), argumentList);
    }


    inline QDBusPendingReply<> Start2DWM()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Start2DWM"), argumentList);
    }

    inline void Start2DWMQueued()
    {
        QList<QVariant> argumentList;

        CallQueued(QStringLiteral("Start2DWM"), argumentList);
    }



Q_SIGNALS: // SIGNALS
    void WMChanged(const QString &in0);
    // begin property changed signals

public Q_SLOTS:
    void CallQueued(const QString &callName, const QList<QVariant> &args);

private Q_SLOTS:
    void onPendingCallFinished(QDBusPendingCallWatcher *w);

private:
    __WMSwitcherPrivate *d_ptr;
};

namespace org {
  namespace deepin {
      namespace dde {
        typedef ::__WMSwitcher WMSwitcher1;
      }
  }
}
#endif
